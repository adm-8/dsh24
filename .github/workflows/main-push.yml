name: Bot CI\CD

on:
  push:
    branches: [ main ]

jobs:    
  build:
    name: Build and push BOT Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Build Debug Info
        run: |
          echo "DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}"
          echo "DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}"
          echo "DOCKERHUB_REPO: ${{ vars.DOCKERHUB_REPO }}"
          echo "DOCKERHUB_TAG: ${{ vars.DOCKERHUB_TAG }}"
        
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Packages
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image and push to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: .
          tags: |
            ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPO }}:${{ vars.DOCKERHUB_TAG }}
          push: true

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
        
  deploy:
    name: Deploy BOT on remote server
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy BOT on remote server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_SERVER_ADDRESS }}
          username: ${{ secrets.REMOTE_SERVER_USERNAME }}
          password: ${{ secrets.REMOTE_SERVER_PASSWORD }}
          port: ${{ secrets.REMOTE_SERVER_PORT }}
          script: |
            echo "Deploying BOT APP..."
            
            rm -r /var/opt/bot/ 2> /dev/null
            mkdir -p /var/opt/bot/db_init_scripts
            
            wget https://raw.githubusercontent.com/adm-8/dsh24/main/docker-compose.yml -O /var/opt/bot/docker-compose.yml
            wget https://raw.githubusercontent.com/adm-8/dsh24/main/db_init_scripts/v0001_create_schema.sql -O /var/opt/bot/db_init_scripts/v0001_create_schema.sql
            wget https://raw.githubusercontent.com/adm-8/dsh24/main/db_init_scripts/V0002_create_tables.sql -O /var/opt/bot/db_init_scripts/V0002_create_tables.sql
            wget https://raw.githubusercontent.com/adm-8/dsh24/main/db_init_scripts/V0003_insert_data.sql -O /var/opt/bot/db_init_scripts/V0003_insert_data.sql
            
            cat <<EOT > /var/opt/bot/.env
            TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            POSTGRES_DB=BOT_DB
            POSTGRES_HOST=BOT_DB_HOST
            POSTGRES_PORT=5432
            POSTGRES_USER=BOT_USER
            POSTGRES_PASSWORD=BOT_PASS
            POSTGRES_DB_STORE_PATH='/tmp/BOT_DB_DATA'
            POSTGRES_INIT_DB_PATH='/var/opt/bot/db_init_scripts'
            DOCKERHUB_USERNAME=${{ vars.DOCKERHUB_USERNAME }}
            DOCKERHUB_REPO=${{ vars.DOCKERHUB_REPO }}
            DOCKERHUB_TAG=${{ vars.DOCKERHUB_TAG }}
            LOGGER_FILE_PATH='/var/log/bot.log'
            EOT
            
            echo "[INFO] CURRENT CONTAINER LIST:"
            docker ps -a
            
            echo "[INFO] CURRENT VOLUME LIST:"
            docker volume ls
            
            echo "[INFO] Removing old docker objects..."
            docker rm -f bot-bot_db-1 2> /dev/null
            docker volume rm -f opt_bot-db-data 2> /dev/null
            rm -r /tmp/BOT_DB_DATA 2> /dev/null
            
            docker pull ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPO }}:${{ vars.DOCKERHUB_TAG }}
            docker rmi $(docker images -f "dangling=true" -q) --force
            
            docker compose --env-file /var/opt/bot/.env -f /var/opt/bot/docker-compose.yml up -d
            echo "Deploying BOT APP complete"